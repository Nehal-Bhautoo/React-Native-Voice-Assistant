{"version":3,"sources":["BookCard.jsx","SearchBook.jsx","components/Drawer.jsx","App.js","index.js"],"names":["referencesList","sendMail","mailbody","link","escape","window","location","href","BookCard","bookNumber","thumbnail","title","pageCount","language","description","authors","publisher","previewLink","infoLink","useState","modal","setModal","toggle","console","log","style","width","className","CardImg","top","height","src","alt","CardBody","CardTitle","Button","onClick","id","bookTitle","italics","bookAuthor","bookPublisher","date","Date","year","getFullYear","month","getMonth","accessed","getDate","appendList","document","getElementById","push","toast","info","newLi","createElement","newContent","createTextNode","appendChild","addEventListener","Modal","isOpen","aria-label","type","aria-hidden","color","target","rel","styles","fab","position","bottom","right","fab2","SpeechRecognition","webkitSpeechRecognition","recognition","continuous","tts","speechSynthesis","StartSpeech","searchFormInput","querySelector","muteBtn","start","event","transcript","results","toLowerCase","trim","stop","value","endsWith","focus","click","toSpeak","SpeechSynthesisUtterance","voices","forEach","voice","name","selectedVoiceName","speak","startsWith","ids","all","length","bookCardBodyBtn","i","error","match","success","getVoices","AppSearch","maxResults","setMaxResults","startIndex","setStartIndex","query","setQuery","loading","setLoading","cards","setCards","handleSubmit","axios","get","then","res","data","totalItems","items","catch","err","response","InputGroup","Input","placeholder","onChange","e","hidden","FormGroup","Label","for","Spinner","map","item","volumeInfo","imageLinks","handleCards","Fab","drawerWidth","menuButton","marginRight","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","spacing","mixins","toolbar","justifyContent","contentShift","btnSend","backgroundColor","PersistentDrawerRight","classes","useTheme","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","variant","noWrap","Drawer","anchor","paper","direction","Divider","List","CardActions","Card","this","props","text","Component","Card2","Card3","App","ReactDom","render"],"mappings":"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","file":"static/js/main.8faf4b27.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {Card, CardTitle, CardImg, CardBody, Button, Modal} from 'reactstrap';\r\nimport {toast} from \"react-toastify\";\r\n\r\nlet referencesList = [];\r\n\r\nconst BookCard = ({\r\n    bookNumber,\r\n    thumbnail,\r\n    title,\r\n    pageCount,\r\n    language,\r\n    description,\r\n    authors,\r\n    publisher,\r\n    previewLink,\r\n    infoLink\r\n}) => {\r\n    // set state\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(\r\n        !modal,\r\n        //TODO\r\n        console.log(previewLink)\r\n    );\r\n\r\n    function reference() {\r\n        let bookNum = bookNumber;\r\n        let thumb = thumbnail;\r\n        let bookTitle = title.italics();\r\n        let bookPageCount = pageCount;\r\n        let bookLan = language;\r\n        let bookDes = description;\r\n        let bookAuthor = authors;\r\n        let bookPublisher = publisher;\r\n        let date = new Date();\r\n        let year = date.getFullYear()\r\n        let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let month = months[date.getMonth()];\r\n        let day = date.getDate();\r\n        let accessed = \"[Accessed \" + day + \" \" + month + \" \" + year + \"]\";\r\n        const appendList = document.getElementById('appendListArray');\r\n        referencesList.push(\r\n            bookAuthor + \" \" +\r\n            \"(\" + \"year\" + \")\" + \" \" +\r\n            bookTitle + \" \" +\r\n            \"edition\" + \" \" +\r\n            bookPublisher + \" \" +\r\n            accessed\r\n        )\r\n        toast.info(\"Added to references list\");\r\n        let newLi = document.createElement(\"li\");\r\n        let newContent = document.createTextNode(referencesList);\r\n        newLi.appendChild(newContent);\r\n        appendList.appendChild(newLi);\r\n\r\n        const sentViaMailBtn = document.getElementById(\"sentViaMailBtn\");\r\n        sentViaMailBtn.addEventListener(\"click\", sendMail);\r\n    }\r\n    return(\r\n        <div>\r\n            <Card style={{ width: '233px' }} className='cardMain '>\r\n                <CardImg\r\n                    top\r\n                    style={{ width: '100%', height: '230px' }}\r\n                    src={thumbnail}\r\n                    alt={title}\r\n                />\r\n                <CardBody className=\"book-card-body\">\r\n                    <CardTitle className='card-title'>{title}</CardTitle>\r\n                    <h6 className='author-title'>{authors}</h6>\r\n                    <h6 className='book-number'>{bookNumber}</h6>\r\n                    <Button className='btnInfo' onClick={toggle}>More info</Button>\r\n                    <Button className='btnReference' id={bookNumber} onClick={reference}>Reference</Button>\r\n                </CardBody>\r\n                <Modal isOpen={modal} toggle={toggle}>\r\n                    <div className='modal-header d-flex justify-content-center'>\r\n                        <h5 className='modal-title text-center' id='exampleModalLabel'>{title}</h5>\r\n                        <button\r\n                            aria-label='Close'\r\n                            className='close'\r\n                            type='button'\r\n                            onClick={toggle}>\r\n                            <span aria-hidden={true}>X</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className='modal-body'>\r\n                        <div className='d-flex justify-content-between ml-3'>\r\n                            <img src={thumbnail} alt={title} style={{ height: '233px' }} />\r\n                            <div className='modalSection'>\r\n                                <p>Page Count: {pageCount}</p>\r\n                                <p>Language : {language}</p>\r\n                                <p>Authors : {authors}</p>\r\n                                <p>Publisher : {publisher}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='mt-3'>{description}</div>\r\n                    </div>\r\n                    <div className='modal-footer'>\r\n                        <div className='left-side'>\r\n                            <Button\r\n                                href={previewLink}\r\n                                className='btnLink'\r\n                                color='default'\r\n                                type='button'\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'>\r\n                                Preview Link\r\n                            </Button>\r\n                        </div>\r\n                        <div className='right-side'>\r\n                            <Button\r\n                                href={infoLink}\r\n                                className='btnLink'\r\n                                color='default'\r\n                                type='button'\r\n                                target='_blank'\r\n                                rel='noopener noreferrer'>\r\n                                Info Link\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction sendMail() {\r\n    const mailbody = \"My List: \\n\\n\" + referencesList;\r\n    let link = \"mailto:nehalb34@gmail.com\"\r\n        + \"?cc\"\r\n        + \"&subject=\" + escape(\"Reference List\")\r\n        + \"&body=\" + escape(mailbody);\r\n    window.location.href = link;\r\n}\r\n\r\nexport default BookCard;","import React, {useState} from 'react';\r\nimport \"./components/referenceform.css\";\r\nimport {Button, FormGroup, Input, InputGroup, Label, Spinner} from 'reactstrap';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport axios from 'axios';\r\nimport BookCard from './BookCard.jsx';\r\nimport SettingsVoiceIcon from '@material-ui/icons/SettingsVoice';\r\nimport MicOff from '@material-ui/icons/MicOff';\r\nimport Fab from \"@material-ui/core/Fab\";\r\n\r\nconst styles = {\r\n    fab: {\r\n        width: 60,\r\n        height: 60,\r\n        position: \"fixed\",\r\n        bottom: 20,\r\n        right: 20,\r\n    },\r\n    fab2: {\r\n        width: 60,\r\n        height: 60,\r\n        position: \"fixed\",\r\n        bottom: 100,\r\n        right: 20,\r\n    }\r\n}\r\n\r\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst recognition = new SpeechRecognition();\r\nrecognition.continuous = true;\r\n\r\nlet tts = window.speechSynthesis;\r\n\r\nfunction AppSearch() {\r\n    // States\r\n    const [maxResults, setMaxResults] = useState(5);\r\n    const [startIndex, setStartIndex] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n    // Handle Search\r\n    const handleSubmit = () => {\r\n        setLoading(true);\r\n        if (maxResults > 40 || maxResults < 1) {\r\n            toast.error('max results must be between 1 and 40');\r\n        } else {\r\n            axios\r\n                .get(\r\n                    `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=${maxResults}&startIndex=${startIndex}`\r\n                ).then(res => {\r\n                if (startIndex >= res.data.totalItems || startIndex < 1) {\r\n                    toast.error(\r\n                        `max results must be between 1 and ${res.data.totalItems}`\r\n                    );\r\n                } else {\r\n                    if (res.data.items.length > 0) {\r\n                        setCards(res.data.items);\r\n                        setLoading(false);\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setLoading(true);\r\n                console.log(err.response);\r\n            });\r\n        }\r\n    };\r\n    // Main Showcase\r\n    const mainHeader = () => {\r\n        return (\r\n            <div className='main-card'>\r\n                <div className='filter'>\r\n\r\n                </div>\r\n                <div className='Card'>\r\n                    <InputGroup className='inputGroup' id=\"search-form\">\r\n                        <Input\r\n                            className='searchBar'\r\n                            id=\"search-form-input\"\r\n                            placeholder='Book Search'\r\n                            value={query}\r\n                            onChange={e => setQuery(e.target.value)}\r\n                            />\r\n                        <Button className='btnSearch' onClick={handleSubmit} id=\"searchBtn\">\r\n                            <i>Search</i>\r\n                        </Button>\r\n                        {/*Select Voice: <select id='voiceList' hidden={true}></select>*/}\r\n                        <div className='container'>\r\n                            <div className='filterResults col-sm-6' hidden={true}>\r\n                                <FormGroup className='maxResult row'>\r\n                                    <Label className='labelMax' for='maxResults'>Max Results</Label>\r\n                                    <Input\r\n                                        className='maxSearch'\r\n                                        type='number'\r\n                                        id='maxResults'\r\n                                        placeholder='Max Results'\r\n                                        value={maxResults}\r\n                                        onChange={e => setMaxResults(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                                <FormGroup className='indexResults col'>\r\n                                    <Label className='labelMax' for='startIndex'>Start Index</Label>\r\n                                    <Input\r\n                                        className='indexSearch'\r\n                                        type='number'\r\n                                        id='startIndex'\r\n                                        placeholder='Start Index'\r\n                                        value={startIndex}\r\n                                        onChange={e => setStartIndex(e.target.value)}\r\n                                    />\r\n                                </FormGroup>\r\n                            </div>\r\n                        </div>\r\n                    </InputGroup>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n    const handleCards = () => {\r\n        if (loading) {\r\n            return (\r\n                <div className='spinnerSection'>\r\n                    <Spinner className='spinner'/>\r\n                </div>\r\n            );\r\n        } else {\r\n            const items = cards.map((item, i) => {\r\n                let thumbnail = '';\r\n                if (item.volumeInfo.imageLinks) {\r\n                    thumbnail = item.volumeInfo.imageLinks.thumbnail;\r\n                }\r\n                return (\r\n                    <div className='col-sm-3' key={item.id}>\r\n                        <div className='row-cols-3'>\r\n                            <BookCard\r\n                                bookNumber={i}\r\n                                thumbnail={thumbnail}\r\n                                title={item.volumeInfo.title}\r\n                                pageCount={item.volumeInfo.pageCount}\r\n                                language={item.volumeInfo.language}\r\n                                authors={item.volumeInfo.authors}\r\n                                publisher={item.volumeInfo.publisher}\r\n                                description={item.volumeInfo.description}\r\n                                previewLink={item.volumeInfo.previewLink}\r\n                                infoLink={item.volumeInfo.infoLink}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                );\r\n            });\r\n            return (\r\n                <div className='container'>\r\n                    <div className='row listItems'>{items}</div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n    };\r\n    return (\r\n        <div className='w-100 h-150'>\r\n            {mainHeader()}\r\n            {handleCards()}\r\n            <ToastContainer />\r\n            <Fab style={styles.fab} onClick={StartSpeech} color='primary' aria-label='add' id=\"micBtn\" >\r\n                <SettingsVoiceIcon id=\"micIcon\" className=\"microphone\" />\r\n            </Fab>\r\n            <Fab style={styles.fab2} color=\"secondary\" aria-label=\"end\" id=\"muteBtn\">\r\n                <MicOff id=\"micOffIcon\" className=\"microphoneOff\"/>\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction StartSpeech() {\r\n    const searchFormInput = document.querySelector('#search-form-input');\r\n    const muteBtn = document.querySelector(\"#muteBtn\");\r\n    recognition.start();\r\n    recognition.addEventListener(\"result\", resultOfSpeechRecognition);\r\n    if(SpeechRecognition === false) {\r\n        toast.success(\"Speech Recognition on\");\r\n    } else {\r\n        toast.success(\"Speech Recognition On\");\r\n    }\r\n    muteBtn.addEventListener(\"click\", EndSpeech);\r\n    function EndSpeech() {\r\n        if(SpeechRecognition) {\r\n            recognition.stop();\r\n            toast.error(\"Speech Recognition off\");\r\n        } else {\r\n            return toast.error(\"Speech Recognition Already off\");\r\n        }\r\n    }\r\n    let voices = [];\r\n    voices = tts.getVoices();\r\n    let selectedVoiceName = \"Microsoft David Desktop - English (United States)\";\r\n\r\n    function resultOfSpeechRecognition(event) {\r\n        const transcript = event.results[0][0].transcript;\r\n        if(transcript.toLowerCase().trim()===\"stop recording\") {\r\n            recognition.stop();\r\n        } else if(!searchFormInput.value) {\r\n            searchFormInput.value = transcript;\r\n            console.log(transcript);\r\n        } else {\r\n            if(transcript.toLowerCase().trim().endsWith(\"search\")) {\r\n                searchFormInput.focus();\r\n                const searchBtn = document.querySelector('#searchBtn');\r\n                searchBtn.click();\r\n                let toSpeak = new SpeechSynthesisUtterance(\"Performing Search\");\r\n                voices.forEach((voice) => {\r\n                    if(voice.name === selectedVoiceName ) {\r\n                        toSpeak.voice = voice;\r\n                    }\r\n                });\r\n                tts.speak(toSpeak);\r\n            } else if(transcript.toLowerCase().trim().startsWith(\"reset\")) {\r\n                searchFormInput.value = \"\";\r\n                let toSpeak = new SpeechSynthesisUtterance(\"Resetting Input\");\r\n                voices.forEach((voice) => {\r\n                    if(voice.name === selectedVoiceName ) {\r\n                        toSpeak.voice = voice;\r\n                    }\r\n                });\r\n                tts.speak(toSpeak);\r\n                console.log(transcript);\r\n            } else if(transcript.toLowerCase().trim().startsWith(\"get\")) {\r\n                let ids = transcript[5];\r\n                let all = transcript[transcript.length - 1];\r\n                console.log(ids);\r\n                if(ids === \"n\") {\r\n                    const bookCardBodyBtn = document.getElementById(0).click();\r\n                    console.log(bookCardBodyBtn);\r\n                    let toSpeak = new SpeechSynthesisUtterance(\"Added first book to list\");\r\n                    voices.forEach((voice) => {\r\n                        if(voice.name === selectedVoiceName ) {\r\n                            toSpeak.voice = voice;\r\n                        }\r\n                    });\r\n                    tts.speak(toSpeak);\r\n                    toast.info(\"Book Added to list\");\r\n                } else if(ids === \"w\") {\r\n                    const bookCardBodyBtn = document.getElementById(1).click();\r\n                    console.log(bookCardBodyBtn);\r\n                    toast.info(\"Book Added to list\");\r\n                } else if(ids === \"h\") {\r\n                    const bookCardBodyBtn = document.getElementById(2).click();\r\n                    console.log(bookCardBodyBtn);\r\n                    toast.info(\"Book Added to list\");\r\n                } else if(ids === \"o\") {\r\n                    const bookCardBodyBtn = document.getElementById(3).click();\r\n                    console.log(bookCardBodyBtn);\r\n                    toast.info(\"Book Added to list\");\r\n                } else if(all === \"l\") {\r\n                    let i;\r\n                    for(i = 0; i < 5; i++) {\r\n                        const bookCardBodyBtn = document.getElementById(i).click();\r\n                        console.log(bookCardBodyBtn);\r\n                    }\r\n                    let toSpeak = new SpeechSynthesisUtterance(\"Added All book to list\");\r\n                    voices.forEach((voice) => {\r\n                        if(voice.name === selectedVoiceName ) {\r\n                            toSpeak.voice = voice;\r\n                        }\r\n                    });\r\n                    tts.speak(toSpeak);\r\n                    toast.info(\" All Book Added to list\");\r\n                } else {\r\n                    toast.error(\"Book Number not found\");\r\n                }\r\n                console.log(transcript);\r\n            } else if(transcript.toLowerCase().trim().match(\"email\")) {\r\n                document.getElementById(\"sentViaMailBtn\").click();\r\n                let toSpeak = new SpeechSynthesisUtterance(\"Sending List to mail\");\r\n                voices.forEach((voice) => {\r\n                    if(voice.name === selectedVoiceName ) {\r\n                        toSpeak.voice = voice;\r\n                    }\r\n                });\r\n                tts.speak(toSpeak);\r\n            } else {\r\n                console.log(transcript);\r\n                searchFormInput.value = transcript;\r\n                const searchBtn = document.querySelector('#searchBtn');\r\n                searchBtn.click();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppSearch;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\";\r\nimport '../index.css';\r\nimport {Button, CardActions} from \"@material-ui/core\";\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst styles = {\r\n    menuButton: {\r\n        marginRight: 2,\r\n    },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: drawerWidth,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-start',\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginRight: 0,\r\n    },\r\n    btnSend: {\r\n        color: \"white\",\r\n        backgroundColor: \"blue\",\r\n    }\r\n}));\r\n\r\nexport default function PersistentDrawerRight() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}>\r\n                <Toolbar>\r\n                    <IconButton edge='start' style={styles.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <RecordVoiceOverIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        Voice Assistant Application\r\n                    </Typography>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"end\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"right\"\r\n                open={open}\r\n                color={\"#292929\"}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ul id=\"appendListArray\">\r\n\r\n                    </ul>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <CardActions>\r\n                        <Button className={classes.btnSend} id=\"sentViaMailBtn\">Send</Button>\r\n                    </CardActions>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport AppSearch from \"./SearchBook\";\r\nimport './components/popup.css';\r\nimport PersistentDrawerRight from \"./components/Drawer\";\r\n\r\nconst App = () => {\r\n    return(\r\n        <div>\r\n          <div className='headerCard'>\r\n              <PersistentDrawerRight/>\r\n          </div>\r\n          <div className='cards'>\r\n            <Card\r\n                title='Search by Category'\r\n                text='Lists: Art & Music, Biographies, Business,\r\n                Comics, Computer & Tech etc..'/>\r\n\r\n              <Card2\r\n                  title='Search by Terms'\r\n                  text='Lists: Android, Flutter, Javascript, Novel Interaction,\r\n                  Artificial Intelligence etc...'/>\r\n\r\n              <Card3\r\n                  title='Commands Example'\r\n                  text='Lists: Android, Flutter, Javascript, Novel Interaction,\r\n                  Artificial Intelligence etc...'/>\r\n\r\n          </div>\r\n          <div className='cardBook'>\r\n            <AppSearch/>\r\n          </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card1\">\r\n                <div className=\"card-body\">\r\n                    <h2>{this.props.title}</h2>\r\n                    <p>{this.props.text}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Card2 extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card2\">\r\n                <div className=\"card-body\">\r\n                    <h2>{this.props.title}</h2>\r\n                    <p>{this.props.text}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Card3 extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"card3\">\r\n                <div className=\"card-body\">\r\n                    <h2>{this.props.title}</h2>\r\n                    <p>{this.props.text}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","import React from 'react'\r\nimport ReactDom from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}